===========================================================
Задача 1
1. Merge n channels
2. Если один из входных каналов закрывается, то нужно закрыть все остальные каналы
===========================================================

func case3(channels ...chan int) chan int {
}

===========================================================
Задача 2
1. Что будет содержать s после инициализации?
2. Что произойдет в println для слайса и для мапы?
===========================================================
func a(s []int) {
    s = append(s, 37)
}

func b(m map[int]int) {
    m[3] = 33
}

func main() {
    s := make([]int, 3, 8)
    m := make(map[int]int, 8)

    // add to slice
    a(s)
    println(s[3]) //?

    // add to map
    b(m)
    println(m[3]) //?
}

===========================================================
Задача 3
1. Какие строки работают нормально, а какие нет и почему?
===========================================================

package main

type T []int
func (T) X(){}
func (*T) Z(){}

func main() {
    var t T
    t.X() // 1
    t.Z() // 2
    var p = &t
    p.X() // 3
    p.Z() // 4
    T{}.X() // 5
    T{}.Z() // 6
}

===========================================================
Задача 4
1. Сделай ревью кода (github.com/nosuchpersonn/interview_project)
===========================================================

===========================================================
Задача 5
1. Расчитать примерную нагрузку в RPS, дисковом пространстве и с учетом этого построить систему
===========================================================

Аналог сервиса pastebin
Функционал - создать снипет и обновить снипет
Нагрузка - 10млн созданий в месяц и в 10 раз больше чтений. 
Каждый снипет хранится 1 месяц. Нужно чтобы чтение было как можно быстрее. Еще есть аналитики, которые кидают жирные запросы. 


