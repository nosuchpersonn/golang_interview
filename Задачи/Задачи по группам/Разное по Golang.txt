Разное

===========================================================
Задача 1
1. Что выведется?
===========================================================
package main

import (
  "fmt"
  "math"
)

func main() {
  x := 2.0
  y := 3.0

  result := math.Pow(x, y)

  fmt.Println("%f ^ %f = %f\n", x, y, result)
}

===========================================================
Задача 2
1. Что выведет код?
===========================================================
func main() {
  fmt.Println("start")
  for i := 1; i < 4; i++ {
    defer fmt.Println(i)
  }
  fmt.Println("end")
}

===========================================================
Задача 3
1. Что будет в результате выполнения теста?
===========================================================

type User struct {
  Valid bool
  Id int64
  Number int32
}
type CUser struct {
  Id int64
  Number int32
  Valid bool
}
func TestSize(t *testing.T) {
  user := User{}
  cuser := CUser{}
  if unsafe.Sizeof(user) == unsafe.Sizeof(cuser) {
    t.Log("structs size are equal")
  }
}

===========================================================
Задача 4
1. Какие строки работают нормально, а какие нет и почему?
===========================================================

package main

type T []int
func (T) X(){}
func (*T) Z(){}

func main() {
    var t T
    t.X() // 1
    t.Z() // 2
    var p = &t
    p.X() // 3
    p.Z() // 4
    T{}.X() // 5
    T{}.Z() // 6
}

===========================================================
Задача 5
1. Расскажи подробно что происходит
2. Как сделать так, чтобы работало?
===========================================================
package main

import "fmt"

func main() {
    str := "Привет"
    str[2] = 'e'
    fmt.Println(str)
}